Git Branch:


Commands:

to check in which branch we are present:
git branch

to change the name of a branch:
git branch -M main

to create a new branch:
git checkout -b branch_name

to switch from 1 branch to another branch:
git checkout branch_name	(type branch name where you want to switch)

to delete any branch:
git branch -d branch_name	(type branch name which you want to delete)

Important Points Related To branch:

1. if we want to delete any branch, first we need to switch another branch,
means if we want to delete branch A, then we must switch to branch B, otherwise branch A will not delete, it gives error

2. if we are present in branch A and if we change anything, edit or modify files in branch A, then it will not reflect, change or show in branch B, because we did not change anything in branch B

3. if we make some changes in branch B, and we want to push it in github then we type branch B with origin in git push command:
git push origin B 

if we typed branch A instead of B in above command then it will give error:
git push origin A 	gives error

then your files or changes have been pushed in github
after that go to github and select branch B from branch option in github and you can see the code has been pushed





Merge Branch:

if we want to merge branch A and branch B,

there are 2 methods to merge branch 2 branches:

1. merge 2 branches using Git

before we merge 2 branches we can check differences between 2 branches or compare branches

Compare Branch:

to compare 2 branches, type:

git diff branchname	(type the name of other or second branch which you want to compare to your present or first branch)

means if we are present in branch A and we want to compare with branch B, then we type 
code: 	git diff B

First Method To Merge Branches:

if we are present in branch A and merge with branch B, type:
git merge B

2nd Method To Merge Branches:

we create a PR to merge 2 branches:
PR means pull request.

Create PR Request:

if there are 2 branches and we are present in 2nd branch
if we make some changes in 2nd branch in git and when we push these files or changes in github from 2nd branch of git to 2nd branch of github in the same origin repo 
then it will compare these changes in both branch and if you want to merge both branches in github then you need to create a PR request from here "github"
when you create a PR Request, you need to add some title, description after that click on merge branches,
then your both branches will merged and you will see the same content or files in both branches

Pull Command:

to get remote changes in local machine we use pull command:

git pull origin main

when we merged both branches in github using PR request, then both files have same content in github
and when will come to git in our local machine and check both branches 
then we will find that both branches will not be the same in git and the contents of both branches are also different

to merge both branches in git we use pull command like to merge both branches in github we created a PR request:
code: git pull origin main



